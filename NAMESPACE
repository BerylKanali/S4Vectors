useDynLib(S4Vectors)

import(methods)
importFrom(utils, head, tail, stack)
importFrom(stats, var, cov, cor, sd, median, quantile, mad,
           IQR, smoothEnds, runmed, window, "window<-", aggregate,
           na.omit, na.exclude, complete.cases, setNames)

import(BiocGenerics)
importFrom(stats4, summary, update)

exportClasses(
    characterORNULL, vectorORfactor,
    DataTable,
    NSBS,
    Annotated
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S3 methods
###

S3method(duplicated, DataTable)
S3method(unique, DataTable)

### We also export them thru the export() directive so that (a) they can be
### called directly, (b) tab-completion on the name of the generic shows them,
### (but ?generic.<tab> shows all documented methods) and (c) methods()
### doesn't asterisk them.
export(
    duplicated.DataTable,
    unique.DataTable
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 methods for generics not defined in S4Vectors
###

exportMethods(
    ## Generics defined in the base package:
    NROW, NCOL, dim,
    dimnames, "dimnames<-",
    "rownames<-", "colnames<-",
    subset,
    is.na,
    cbind, rbind,
    merge,
    duplicated, unique,
    by,
    transform,

    ## Generics defined in the methods package:
    coerce, show,

    ## Generics defined in the stats package:
    na.omit, na.exclude, complete.cases
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export non-generic functions
###

export(
    ## S4-utils.R:
    setValidity2, new2, setMethods,

    ## utils.R:
    .Call2,
    get_showHeadLines, get_showTailLines,

    ## normarg-utils.R:
    isTRUEorFALSE, isSingleInteger, isSingleNumber, isSingleString,
    isSingleNumberOrNA, isSingleStringOrNA,
    recycleIntegerArg, recycleNumericArg,
    fold,

    ## str-utils.R:
    safeExplode,
    strsplitAsListOfIntegerVectors,
    svn.time
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 generics defined in S4Vectors + export corresponding methods
###

export(
    ## isConstant.R:
    isConstant,

    ## str-utils.R:
    unstrsplit,

    ## DataTable-class.R:
    ROWNAMES,
    as.env,

    ## subsetting-internals.R:
    NSBS,
    normalizeSingleBracketSubscript, normalizeSingleBracketReplacementValue,
    extractROWS, replaceROWS,
    normalizeDoubleBracketSubscript,
    getListElement, setListElement,

    ## Annotated-class.R:
    metadata, "metadata<-"
)

### Exactly the same list as above.
exportMethods(
    isConstant,
    unstrsplit,
    ROWNAMES,
    as.env,
    NSBS,
    #normalizeSingleBracketSubscript, normalizeSingleBracketReplacementValue,
    extractROWS, replaceROWS,
    #normalizeDoubleBracketSubscript,
    getListElement, setListElement,
    metadata, "metadata<-"
)

