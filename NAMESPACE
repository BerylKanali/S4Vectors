useDynLib(S4Vectors)

import(methods)
importFrom(utils, head, tail, stack)
importFrom(stats, var, cov, cor, sd, median, quantile, mad,
           IQR, smoothEnds, runmed, window, "window<-", aggregate,
           na.omit, na.exclude, complete.cases, setNames)

import(BiocGenerics)
importFrom(stats4, summary, update)

exportClasses(
    characterORNULL, vectorORfactor,
    DataTable,
    NSBS,
    Annotated,
    DataTableORNULL, Vector,
    Hits
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S3 methods
###

S3method(anyDuplicated, NSBS)

S3method(as.data.frame, Vector)

S3method(duplicated, DataTable)
S3method(duplicated, Vector)

S3method(sort, Vector)

S3method(unique, DataTable)
S3method(unique, Vector)

### We also export them thru the export() directive so that (a) they can be
### called directly, (b) tab-completion on the name of the generic shows them,
### (but ?generic.<tab> shows all documented methods) and (c) methods()
### doesn't asterisk them.
export(
    anyDuplicated.NSBS,

    as.data.frame.Vector,

    duplicated.DataTable,
    duplicated.Vector,

    sort.Vector,

    unique.DataTable,
    unique.Vector
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 methods for generics not defined in S4Vectors
###

exportMethods(
    ## Generics defined in the base package:
    NROW, NCOL, dim,
    "rownames<-", "colnames<-",
    dimnames, "dimnames<-",
    is.na, anyNA,
    as.logical, as.integer, as.numeric, as.complex, as.character, as.raw,
    as.data.frame, as.matrix, as.table,
    "[", "[<-",
    subset,
    append,
    cbind, rbind,
    merge,
    "==", "!=", "<=", ">=", "<", ">",
    match, duplicated, unique, anyDuplicated, "%in%",
    sort, rank, xtfrm,
    t,
    by,
    transform,

    ## Generics defined in the methods package:
    coerce, show,

    ## Generics defined in the stats package:
    na.omit, na.exclude, complete.cases
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export non-generic functions
###

export(
    ## S4-utils.R:
    setValidity2, new2, setMethods,

    ## utils.R:
    wmsg,
    .Call2,
    get_showHeadLines, get_showTailLines,

    ## normarg-utils.R:
    isTRUEorFALSE, isSingleInteger, isSingleNumber, isSingleString,
    isSingleNumberOrNA, isSingleStringOrNA,
    recycleIntegerArg, recycleNumericArg,
    fold,

    ## str-utils.R:
    safeExplode,
    strsplitAsListOfIntegerVectors,
    svn.time,

    ## subsetting-internals.R:
    normalizeSingleBracketSubscript,
    normalizeDoubleBracketSubscript,

    ## Hits-class.R:
    remapHits
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 generics defined in S4Vectors + export corresponding methods
###

export(
    ## isSorted.R:
    isConstant, isSorted, isStrictlySorted,

    ## str-utils.R:
    unstrsplit,

    ## DataTable-class.R:
    ROWNAMES,
    as.env,

    ## subsetting-internals.R:
    NSBS,
    normalizeSingleBracketReplacementValue,
    extractROWS, replaceROWS,
    getListElement, setListElement,

    ## Annotated-class.R:
    metadata, "metadata<-",

    ## Vector-class.R:
    fixedColumnNames,
    elementMetadata, mcols, values,
    "elementMetadata<-", "mcols<-", "values<-",
    rename,
    classNameForDisplay, showAsCell,

    ## Vector-comparison.R:
    compare,
    selfmatch,
    findMatches, countMatches,

    ## Hits-class.R:
    queryHits, subjectHits,
    queryLength, subjectLength,
    countQueryHits, countSubjectHits,
    selfmatch
)

### Exactly the same list as above.
exportMethods(
    isConstant, isSorted, isStrictlySorted,
    unstrsplit,
    ROWNAMES,
    as.env,
    NSBS,
    normalizeSingleBracketReplacementValue,
    extractROWS, replaceROWS,
    getListElement, setListElement,
    metadata, "metadata<-",
    fixedColumnNames,
    elementMetadata, mcols, values,
    "elementMetadata<-", "mcols<-", "values<-",
    rename,
    classNameForDisplay, showAsCell,
    compare,
    selfmatch,
    findMatches, countMatches,
    queryHits, subjectHits,
    queryLength, subjectLength,
    countQueryHits, countSubjectHits,
    selfmatch
)

